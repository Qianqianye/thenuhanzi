---
title: hanzimaker
---

<h1>
  hanzimaker
</h1>

  <div class="background-context">
  inspired by netizens and activists who were making new characters. Prior art, collected from "Li Wei & Zhu Hua (2019) Tranßcripting: playful subversion with
Chinese characters, International Journal of Multilingualism, 16:2, 145-161, DOI:
10.1080/14790718.2019.1575834"

  </div>
  <div class="background-context-images">

  <figure>
    <%= image_tag "niubi.jpg", :width => '100px'%>
  </figure>
  <figcaption>
    niubi, meaning awesome. uses "niu" 牛 character for cow, and B, english letter.
  </figcaption>
  <figure>
  <%= image_tag "shiwai.jpg", :width => '100px'%>
  </figure>
  <figcaption>
    shi wai, or "deadly person", referring to CY Leung during umbrella revolution.
    尸shi and Y letter.
  </figcaption>


  <figure>
    <%= image_tag "ta.jpg", :width => '100px'%>
  </figure>
  <figcaption>
    Ta, 他 and 她 alternative, third person non-binary.
  </figcaption>

  <figure>
    <%= image_tag "hk.jpg", :width => '100px'%>
  </figure>
  <figcaption>
    (a) Oppose China, Destabilize Hong Kong, (b) Thief/Seller of Hong Kong, and (c) Hong Kong
independence.
  </figcaption>
  </div>



  <div id="download-link">
    <a href="" id="download-link-href"></a>
  </div>
<div class="parent-container">

    <div id="canvas-container">
      <canvas id="canvas"></canvas>
    </div>


    <div class="radicals right">
      <h3>Radicals</h3>

      <div class="radical-menu-container">
        <div class="radicals radical-menu">
          <% data.radicals.group_by(&:category).each do |category, radicals| %>
            <div id="radical-group-heading">
              <%=category%>
            </div>
            <div class="radical-group-category">
            <%radicals.each do |f|%>

                <div class="radical-button">
                  <div class="radical-svg">
                      <%= image_tag "radicals/radical-#{f.id}.svg", :data=>"assets/images/radicals/radical-#{f.id}.svg", :class => 'radical-svg-link', :draggable => 'true'%>
                  </div>
                  <div class="svg-definition">
                    <%=link_to "#{f.id}, #{f.definition}","#", :relative => true, :data =>"assets/images/radicals/radical-#{f.id}.svg", :class => "radical-svg-link"%>
                  </div>
                </div>
                <%end%>
            </div>
            <%end%>

        </div>
      </div>

        <h3>Sensitive Words</h3>
          <div class="radicals word-menu">
            <% data.words.each do |word| %>
              <div class="word-button">
                  <div class="word-svg">
                    <%= image_tag "words/#{word.id}.svg", :data=>"assets/images/words/#{word.id}.svg", :class => 'word-svg', :draggable => 'true'%>
                  </div>
                  <div class="svg-definition-word">
                    <%=link_to "#{word.en}","#", :relative => true, :data =>"assets/images/words/#{word.id}.svg", :class => "radical-svg-link"%>
                  </div>
              </div>
              <% end %>

            </div>



        <div class="freeText">
          <label for="addText">Freetype</label>
          <input type="text" id="addText"  value="" />
          <button onclick="submitTextToCanvas()" id="testButton"> Add to Canvas </button>
        </div>

      </div>

  </div>



<script type="text/javascript">

function submitTextToCanvas(id) {
  var value = document.getElementById('addText').value;
  var textbox = new fabric.Textbox(value, {
    left:100,
    top: 100,
    width: 200,
    fontSize: 40
  });
  canvas.add(textbox).setActiveObject(textbox);
}

// $(window).bind("load",function() {

//prevent the page from scrolling up when clicking one of the buttons to add to canvas
  $('.radical-svg-link').click(function (event) {
       event.preventDefault();
  });

  var canvasHeight=600;
  var canvasWidth=600;

  var canvas = new fabric.Canvas('canvas', {
    selection: false,
    height: 600,
    width: 600
    });


//Adding the tianzige
    function drawGrid(c) {
      const options = {
          distance: c.width/4,
          width: c.width,
          height: c.height,
          param: {
            stroke: "#ebebeb",
            strokeWidth: 2.5,
            selectable: false
          }
        },
        gridLen = options.width / options.distance;

      for (var i = 0; i < gridLen; i++) {
        var distance = i * options.distance,
          horizontal = new fabric.Line(
            [distance, 0, distance, options.width],
            options.param
          ),
          vertical = new fabric.Line(
            [0, distance, options.width, distance],
            options.param
          );
        c.add(horizontal);
        c.add(vertical);
        if (i % 4 === 0) {
          horizontal.set({ stroke: "#cccccc" });
          vertical.set({ stroke: "#cccccc" });
        }
      }
  }


  drawGrid(canvas);


  var textbox = new fabric.Textbox('Click radicals on the right onto this canvas, double click me to type', {
    left:100,
    top: 100,
    width: 200,
    fontSize: 40
  });

  canvas.add(textbox).setActiveObject(textbox);

  var currentlyDragging;


  //snapping
  var distance = canvas.width/8;
    canvas.on('object:moving', function(options) {
      w = options.target.width * options.target.scaleX,
      h = options.target.height * options.target.scaleY,
      options.target.set({
        right: Math.round((options.target.left + w) / distance) * distance,
        left: Math.round(options.target.left / distance) * distance,
        top: Math.round(options.target.top / distance) * distance
      });
    });

//Add to canvas

function add(e) {
  console.log(e.target.getAttribute('data'))
  var svgURL = e.target.getAttribute('data');
  fabric.loadSVGFromURL(svgURL, function(objects, options) {
    for(var i=0; i < objects.length; i++) {
        objects[i].scaleToWidth(canvasWidth/2);
        objects[i].scaleToHeight(canvasHeight/2);
       canvas.add(objects[i]);
    }
  });

  //commented out below is grouping SVG
  // fabric.loadSVGFromURL(svgURL, function(objects, options) {
  //     var svg = fabric.util.groupSVGElements(objects, options);
  //     // svg.left = e.layerX;
  //     // svg.top = e.layerY;
  //     svg.scaleToWidth(canvasWidth/2);
  //     svg.scaleToHeight(canvasHeight/2);
  //   canvas.add(svg);
  // });
}


var elements = document.getElementsByClassName("radical-svg-link");

// var myFunction = function() {
//     var attribute = this.getAttribute("data-myattribute");
//     alert(attribute);
// };

for (var i = 0; i < elements.length; i++) {
    elements[i].addEventListener('click', add, false);
}


//Deleting active Object

function deleteActiveObject() {
  var activeObject = canvas.getActiveObject();
  canvas.remove(activeObject);
}

$("#delete").click(deleteActiveObject);
$("body").on("keydown", function(e) {
  if (e.which == 8 || e.which == 46) {
    deleteActiveObject();
  }
});

var link = document.getElementById('download-link-href');
    link.innerHTML = 'download image';
    link.addEventListener('click', function(ev) {
    link.href = canvas.toDataURL();
    link.download = "my-new-hanzi.jpg";
}, false);

document.body.getElementById('download-link').appendChild(link);





</script>
